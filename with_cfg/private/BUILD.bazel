load("@bazel_skylib//:bzl_library.bzl", "bzl_library")

alias(
    name = "resettable_check_for_diff_against_dynamic_baseline",
    actual = select(
        {
            ":uses_diff_against_dynamic_baseline": ":uses_diff_against_dynamic_baseline",
        },
        no_match_error = "resettable(...) requires --experimental_output_directory_naming_scheme=diff_against_dynamic_baseline, which is available and the default in Bazel 7.",
    ),
    # Do not fail if the with_cfg.bzl repository itself doesn't have the flag set.
    tags = ["manual"],
    visibility = ["//visibility:public"],
)

config_setting(
    name = "uses_diff_against_dynamic_baseline",
    values = {
        "experimental_output_directory_naming_scheme": "diff_against_dynamic_baseline",
    },
)

bzl_library(
    name = "args",
    srcs = ["args.bzl"],
    visibility = ["//with_cfg:__subpackages__"],
    deps = [
        ":rewrite",
    ],
)

bzl_library(
    name = "builder",
    srcs = ["builder.bzl"],
    visibility = ["//with_cfg:__subpackages__"],
    deps = [
        ":frontend",
        ":setting",
        ":transition",
        ":transitioning_alias",
        ":utils",
        ":wrapper",
    ],
)

bzl_library(
    name = "extend",
    srcs = ["extend.bzl"],
    visibility = ["//with_cfg:__subpackages__"],
    deps = [
        ":setting",
    ],
)

bzl_library(
    name = "frontend",
    srcs = ["frontend.bzl"],
    visibility = ["//with_cfg:__subpackages__"],
    deps = [
        ":providers",
        "@bazel_skylib//rules:common_settings",
    ],
)

bzl_library(
    name = "original_settings",
    srcs = ["original_settings.bzl"],
    visibility = ["//with_cfg:__subpackages__"],
    deps = [":original_settings_rule"],
)

bzl_library(
    name = "original_settings_rule",
    srcs = ["original_settings_rule.bzl"],
    visibility = ["//with_cfg:__subpackages__"],
    deps = [":providers"],
)

bzl_library(
    name = "providers",
    srcs = ["providers.bzl"],
    visibility = ["//with_cfg:__subpackages__"],
)

bzl_library(
    name = "rewrite",
    srcs = ["rewrite.bzl"],
    visibility = ["//with_cfg:__subpackages__"],
    deps = [
        ":select",
        ":utils",
    ],
)

bzl_library(
    name = "rule_defaults",
    srcs = ["rule_defaults.bzl"],
    visibility = ["//with_cfg:__subpackages__"],
    deps = [
        "@rules_java//java/common",
    ],
)

bzl_library(
    name = "select",
    srcs = ["select.bzl"],
    visibility = ["//with_cfg:__subpackages__"],
    deps = [":utils"],
)

bzl_library(
    name = "setting",
    srcs = ["setting.bzl"],
    visibility = ["//with_cfg:__subpackages__"],
    deps = [
        ":select",
        ":utils",
    ],
)

bzl_library(
    name = "transition",
    srcs = ["transition.bzl"],
    visibility = ["//with_cfg:__subpackages__"],
    deps = [
        ":setting",
        ":utils",
    ],
)

bzl_library(
    name = "transitioning_alias",
    srcs = ["transitioning_alias.bzl"],
    visibility = ["//with_cfg:__subpackages__"],
    deps = [
        ":providers",
        ":setting",
    ],
)

bzl_library(
    name = "utils",
    srcs = ["utils.bzl"],
    visibility = ["//with_cfg:__subpackages__"],
)

bzl_library(
    name = "with_cfg",
    srcs = ["with_cfg.bzl"],
    visibility = ["//with_cfg:__subpackages__"],
    deps = [
        ":builder",
        ":extend",
        ":providers",
        ":rule_defaults",
    ],
)

bzl_library(
    name = "wrapper",
    srcs = ["wrapper.bzl"],
    visibility = ["//with_cfg:__subpackages__"],
    deps = [
        ":args",
        ":rewrite",
        ":select",
        ":setting",
        ":utils",
        "@bazel_features//:features",
    ],
)
