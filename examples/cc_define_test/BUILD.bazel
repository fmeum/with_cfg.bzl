load("@with_cfg.bzl", "original_settings")
load("//helpers:defs.bzl", "untransitioned_target")
load(":cc_define_test.bzl", "cc_define_test")

cc_define_test(
    name = "dir/hello_world",
    srcs = ["hello_world_test.cc"],
    args = [
        "arg1",
        "arg2",
    ],
    data = select({
        "@rules_cc//cc/compiler:msvc-cl": ["greeting_msvc.txt"],
        "//conditions:default": ["greeting_generic.txt"],
    }) + [":data_target"],
    env = {
        "MY_VAR": "my_value",
    } | select({
        "@rules_cc//cc/compiler:msvc-cl": {
            "GREETING_RLOCATIONPATH": "$(rlocationpath :greeting_msvc.txt)",
        },
        "//conditions:default": {
            "GREETING_RLOCATIONPATH": "$(rlocationpath :greeting_generic.txt)",
        },
    }),
    exec_properties = select({
        "//conditions:default": {
            "foo": "bar",
            # Exec groups of the underlying rule can be referenced.
            "test.hello": "world",
            "cpp_link.high_mem": "true",
        },
    }) | {
        "with_cfg": "enabled",
    },
    deps = ["@bazel_tools//tools/cpp/runfiles"],
)

untransitioned_target(
    name = "data_target",
)

# Implicit outputs are supported.
alias(
    name = "stripped_hello_world",
    actual = "dir/hello_world.stripped",
)

original_settings(
    name = "cc_define_test_original_settings",
)
